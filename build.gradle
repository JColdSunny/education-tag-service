plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.google.protobuf" version "0.8.19"
    id 'idea'
}

group = 'com.jcs'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    protobuf_version = '3.21.2'
    grpc_version = '1.47.0'
    grpc_server_version = '2.13.1.RELEASE'
    mapstruct_version = '1.5.2.Final'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation "io.grpc:grpc-netty:${grpc_version}"
    implementation("net.devh:grpc-server-spring-boot-starter:${grpc_server_version}") {
        exclude group: 'io.grpc', module: 'grpc-netty-shaded'
    }

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation "org.mapstruct:mapstruct:${mapstruct_version}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"

    implementation 'org.flywaydb:flyway-core'

    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

compileJava {
    options.compilerArgs += ['-Amapstruct.defaultComponentModel=spring']
}

test {
    useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobuf_version}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpc_version}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}
